@component-name = "portal-user-management-and-portal-configuration"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Language Override";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		LanguageOverride.openLanguageOverridePortlet();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@description = "This test asserts that Cancel button works as expected in Import Translations page."
	@priority = "5"
	test CanCancelImportTranslation {
		task ("Given assert the Import Translations page display") {
			Portlet.gotoPortletOptions(portletOption = "Import Translations");

			ControlMenu.viewHeaderTitleNotPresent(headerTitle = "Language Override");

			ControlMenu.viewHeaderTitle(headerTitle = "Import Translations");

			AssertElementPresent(
				key_title = "Import File",
				locator1 = "Header#H5_TITLE");

			AssertTextEquals(
				locator1 = "LanguageOverride#IMPORT_TRANSLATIONS_DESCRIPTION",
				value1 = "Support file format .properties.");

			PortalSettings.viewDefaultLanguageCP(defaultPortalLanguage = "en-US");

			InputField.viewText(
				fieldLabel = "File Upload",
				text = "");

			Button.viewPresent(button = "Save");
		}

		task ("When click Cancel button") {
			Button.clickCancel();
		}

		task ("Then user is redirected to language key page") {
			ControlMenu.viewHeaderTitleNotPresent(headerTitle = "Import Translations");

			ControlMenu.viewHeaderTitle(headerTitle = "Language Override");
		}
	}

	@description = "This test asserts that the Export option only displays when we have language key with override."
	@priority = "5"
	test CanViewExportOptionWhenHasOverride {
		task ("Given assert the Export Overridden Translations option not displays by default") {
			Portlet.viewPortletOptions(optionsName = "Import Translations");

			Portlet.viewNoPortletOptions(optionsName = "Export Overridden Translations");
		}

		task ("When add a new language key with override") {
			LanguageOverride.addLanguageKey(
				languageKey = "new-key",
				translationOverrideList = "en-US",
				translationOverrideValueList = "New key");
		}

		task ("Then Export Overridden Translations appear in the options menu dropdown") {
			Portlet.viewPortletOptions(optionsName = "Export Overridden Translations");
		}
	}

	@description = "This test asserts that the File Upload field is required in Import Translations page."
	@priority = "4"
	test CanViewFileUploadFieldIsRequired {
		task ("Given go to the Import Translations page") {
			Portlet.gotoPortletOptions(portletOption = "Import Translations");
		}

		task ("When click Save button") {
			Button.clickSave();
		}

		task ("Then assert error message and File Upload field is required") {
			FormPortlet.viewValidationErrorMessage();

			FormFields.viewFieldRequired(fieldLabel = "File Upload");
		}
	}

}