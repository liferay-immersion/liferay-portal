@component-name = "portal-commerce"
definition {

	property custom.properties = "jsonws.web.service.paths.excludes=${line.separator}company.security.strangers.verify=false";
	property osgi.module.configuration.file.names = "com.liferay.commerce.configuration.CommerceOrderImporterTypeConfiguration.config";
	property osgi.module.configurations = "enabled=&quot;true&quot;";
	property portal.release = "true";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "Product Info Management";

	setUp {
		CommerceConfiguration.commerceSetUp(minium = "true");

		task ("Setup: Create an account with a buyer user") {
			CommerceEntry.addAccountEntryUser(
				accountName = "Commerce Account",
				accountType = "Business",
				agreeToTermsAndAnswerReminderQuery = "true",
				createNewAccount = "true",
				requireReset = "false",
				userEmailAddress = "buyer@liferay.com",
				userFirstName = "Buyer",
				userLastName = "User",
				userRole = "Buyer",
				userScreenName = "buyeruser",
				userSiteMembership = "Minium");
		}
	}

	tearDown {
		CommerceConfiguration.commerceTearDown();
	}

	@description = "Verify user can download CSV template"
	@priority = "3"
	test DownloadCSVTemplate {
        task ("Given a Minium site with a buyer user") {
			User.logoutPG();

			CommerceLogin.miniumLogin(
				password = "test",
				urlAppend = "web/minium",
				userEmailAddress = "buyer@liferay.com");
		}

        task ("And given the user is creating a new order") {
			CommerceAcceleratorsInitializer.createNewOrderFromPendingOrders();
		}

		task ("When the user go to start a new order by Import from CSV") {
			CommerceOrders.importOrderFromType(orderType = "CSV");
		}

		task ("And when the user want to get the CSV template and click on Download") {
			Button.click(button = "Download Template");
		}

		task ("Then the template is downloaded as .csv file and populated") {
			ImportExport.assertDownloadedFileName(downloadedFile = "csv_template.csv");
		}
    }
}