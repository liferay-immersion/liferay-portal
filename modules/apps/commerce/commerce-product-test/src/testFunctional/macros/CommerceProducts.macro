definition {

	macro addEntry {
		Click(locator1 = "Button#PLUS");

		Click(
			key_menuItem = "${productType}",
			locator1 = "MenuItem#DROPDOWN_MENU_ITEM",
			value1 = "${key_menuItem}");

		if (!(isSet(productCatalog))) {
			var productCatalog = "Master";
		}

		CommerceEntry.addProductsEntry(
			compileDescription = "${compileDescription}",
			productCatalog = "${productCatalog}",
			productFullDescription = "${productFullDescription}",
			productName = "${productName}",
			productShortDescription = "${productShortDescription}",
			publishProduct = "${publishProduct}");
	}

	macro deleteEntries {
		Click.clickNoMouseOverNoWaitForVisible(locator1 = "CommerceNavigation#SELECT_ALL_CHECKBOX");

		if (IsElementPresent(locator1 = "Button#TRASH_ENABLED")) {
			ClickNoError(locator1 = "Button#TRASH_ENABLED");
		}
		else {
			ClickNoError(locator1 = "Button#DELETE");
		}

		if (isSet(deleteMessage)) {
			Confirm(value1 = "${deleteMessage}");
		}
	}

	macro deleteProductsEntry {
		ClickNoError(locator1 = "CommerceEntry#BODY_VERTICAL_ELLIPSIS");

		CommerceEntry.clickNoError(menuItem = "Delete");

		AssertElementPresent(locator1 = "Message#SUCCESS");

		AssertElementNotPresent(locator1 = "Message#ERROR");
	}

	macro moveCatalogEntriesToRecycleBin {
		Click(locator1 = "CommerceNavigation#SELECT_ALL_CHECKBOX");

		Click(locator1 = "Button#MOVE_TO_RECYCLE_BIN");
	}

	macro openProductsAdmin {
		Navigator.openWithAppendToBaseURL(
			baseURL = "${baseURL}",
			urlAppend = "group/guest/~/control_panel/manage?p_p_id=com_liferay_commerce_product_definitions_web_internal_portlet_CPDefinitionsPortlet");

		WaitForVisible(locator1 = "Button#PLUS");
	}

	macro searchProduct {
		Type(
			locator1 = "CommerceNavigation#SEARCH_FIELD",
			value1 = "${search}");

		KeyPress(
			locator1 = "CommerceNavigation#SEARCH_FIELD",
			value1 = "\RETURN");
	}

	macro addProductWithStatusViaAPI {
			if("${productStatusCode}" == "0"){
				var productName = "Approved Product";
			}
			else if ("${productStatusCode}" == "1"){
				var productName = "Pending Product";
			}
			else if("${productStatusCode}" == "2"){
				var productName = "Draft Product";
			}
			else if("${productStatusCode}" == "3"){
				var productName = "Expired Product";
			}
			else if("${productStatusCode}" == "4"){
				var productName = "Denied Product";
			}
			else if("${productStatusCode}" == "5"){
				var productName = "Inactive Product";
			}
			else if("${productStatusCode}" == "6"){
				var productName = "Incomplete Product";
			}
			else if("${productStatusCode}" == "7"){
				var productName = "Scheduled Product";
			}
			else if("${productStatusCode}" == "8"){
				var productName = "In Recycle Bin Product";
			}
			else {
				var productName = "Any Product";
			}

			CommerceJSONProductsAPI._addCommerceProduct(
				catalogName = "${catalogName}",
				productName = "${productName}",
				productType = "${productType}",
				productStatus = "${productStatusCode}");
	}

	macro duplicateProduct {	
		AssertElementPresent(
			key_status = "${status}",
			locator1 = "CommerceEntry#WORKFLOW_STATUS");

		if("${status}" != "Draft") {
			AssertElementNotPresent(
				key_text = "Save as Draft",
				locator1 = "Button#ANY");
		}
		else {
			AssertElementPresent(
				key_text = "Save as Draft",
				locator1 = "Button#ANY");
		}

		Click(
			key_itemName = "",
			locator1 = "CommerceEntry#SPECIFIC_MENU_ITEM");

		Click(
			key_optionValue = "Duplicate",
			locator1 = "CommerceFrontStore#FS_PRODUCT_OPTION");

		CommerceEntry.addProductsEntry(
			productCatalog = "${productCatalog}",
			productFullDescription = "Full Description for ${productName}",
			productName = "Copy of ${productName}",
			productShortDescription = "Short Description for ${productName}",
			publishProduct = "false");

		AssertElementPresent(
			key_status = "Draft",
			locator1 = "CommerceEntry#WORKFLOW_STATUS");

	}
}