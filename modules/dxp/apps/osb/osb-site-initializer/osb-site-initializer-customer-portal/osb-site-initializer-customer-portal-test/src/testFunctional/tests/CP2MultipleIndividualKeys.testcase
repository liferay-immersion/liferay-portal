@component-name = "portal-solutions"
definition {

	property osgi.modules.includes = "osb-site-initializer-customer-portal";
	property portal.release = "false";
	property portal.upstream = "true";
	property release.feature.flags.disable.DISABLE_PRIVATE_LAYOUTS = "true";
	property testray.main.component.name = "OSB Site Initializer Customer Portal";

	var testSiteName = "Customer Portal Site";
	var testSiteURL = "customer-portal-site";
	var testSiteTamplate = "Liferay OSB Site Initializer Customer Portal";
	var testAccount = "Test Account QA 7.4";
	var testUser = "Test Test";
	var testUserFirstName = "Test";
	var testProduct = "DXP";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Create a new Customer Portal Site") {
			CustomerPortal.addCustomerPortalSite(siteName = "${testSiteName}");
		}

		task ("Login on OKTA") {
			CustomerPortal.loginOktaToUpdateCP();
		}

		task ("Go to Customer Portal Site") {
			ApplicationsMenu.gotoSite(key_site = "${testSiteName}");

			CustomerPortal.waitCP20PageToLoad(userFirstName = "${testUserFirstName}");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		CustomerPortal.customerPortalApisTearDown();

		JSONGroup.deleteGroupByName(groupName = "${testSiteName}");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@description = "Automation ID: LPS-152782 | Test Summary: Verify if when clicked, the Download button will display a drop-down menu with the option Individual Keys (multiple files)"
	@priority = "5"
    test IndividualKeysIsPresentOnDownloadButton {

		task ("Given I go to the test account") {
			CustomerPortal.search(searchItem = "${testAccount}");

			CustomerPortal.enterOnProject(title = "${testAccount}");
		}

		task ("And I click on DXP product") {
			CP2NavigationMenu.goToProductActivation();

			CP2NavigationMenu.clickOnProductButton(product = "${testProduct}");
		}

		task ("When I click at the Actions dropdown button") {
			CustomerPortal.clickAtButton(text = "Actions");
		}

		task ("Then I assert that the correct options at the dropdown are visible") {
			var dropdownItemsList = "Generate New,Deactivate,Export All Key Details (csv)";

			for (var dropdownItem : list "${dropdownItemsList}") {
				CP2ActivationKeys.assertDropdownItemIsVisible(dropdownItem = "${dropdownItem}");
			}
		}
    }

}