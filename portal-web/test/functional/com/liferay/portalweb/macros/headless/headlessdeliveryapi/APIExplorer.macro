definition {

	macro executeAPIMethodWithParameters {
		Variables.assertDefined(parameterList = "${service},${method},${parameter},${value}");

		Click(
			locator1 = "OpenAPI#API_METHOD",
			method = "${method}",
			service = "${service}");

		Type(
			locator1 = "OpenAPI#PARAMETER_UNDER_METHOD",
			method = "${method}",
			parameter = "${parameter}",
			value1 = "${value}");

		if (isSet(requestBody)) {
			Type(
				locator1 = "OpenAPI#REQUEST_BODY",
				method = "${method}",
				value1 = "${requestBody}");
		}

		Click(
			locator1 = "Button#EXECUTE",
			method = "${method}");
	}

	macro executeGraphqlQuery {
		Click(
			locator1 = "Button#BUTTON_WITH_VALUE",
			value = "GraphQL");

		AssertElementPresent.assertVisible(locator1 = "OpenAPI#GRAPHQL_EDITOR_LINE");

		Click(
			editor = "query-editor",
			locator1 = "OpenAPI#GRAPHQL_EDITOR_LINE");

		RobotType.robotTypeShortcut(locator1 = "Ctrl + a");

		RobotType(locator1 = "${query}");

		Click(
			locator1 = "Button#BUTTON_WITH_VALUE",
			value = "Execute Query (Ctrl-Enter)");
	}

	macro navigateToOpenAPI {
		Variables.assertDefined(parameterList = "${api},${version}");

		var portalURL = JSONCompany.getPortalURL();

		Navigator.openSpecificURL(url = "${portalURL}/o/api?endpoint=${portalURL}/o/${api}/${version}/openapi.json");
	}

}